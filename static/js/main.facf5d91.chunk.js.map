{"version":3,"sources":["Components/Messages/Messages.module.css","Containers/Projects/Projects.module.css","Components/Self/picture.png","serviceWorker.js","Components/Self/InfoBar/InfoBar.js","Components/HOC/darkTheme.js","Components/Self/Self.js","Components/NavItem/NavItem.js","Containers/Nav/Nav.js","Containers/Dialogs/Dialogs.js","FirebaseAxiosInstance.js","Redux/actions.js","Redux/actionTypes.js","Components/Messages/MessageCard/MessageCard.js","Components/Messages/MessageBox/MessageBox.js","Components/Messages/Messages.js","Components/VisitButton/VisitButton.js","Components/Card/Card.js","Components/ErrorModal/ErrorModal.js","Containers/Projects/Projects.js","Redux/reducers.js","Redux/Store.js","index.js","Router.js","Components/Self/Self.module.css","Containers/Nav/Nav.module.css","Components/Messages/MessageCard/MessageCard.module.css","Components/Messages/MessageBox/MessageBox.module.css","Components/Card/Card.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","props","Fragment","Typography","title","LinearProgress","variant","value","percentage","color","Component","darkTheme","createMuiTheme","palette","type","primary","main","secondary","ThemeProvider","theme","CssBaseline","children","useStyles","makeStyles","large","display","width","spacing","height","withRouter","document","className","classes","Avatar","alt","src","require","Favorite","style","fontSize","Card","infoCard","CardContent","component","CardActions","Button","size","onClick","history","push","InfoBar","ListItem","button","href","link","target","ListItemIcon","icon","ListItemText","text","React","useState","drawer","useDrawer","floatingButton","Message","historyPush","pathname","ArrowBack","Fab","misc","nav","ArrowUpward","SwipeableDrawer","anchor","open","onOpen","onClose","List","NavItem","Code","LinkedIn","Email","view","setView","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","logIn","autoFocus","instance","Axios","create","baseURL","__newLogIn","dispatch","provider","firebase","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","localStorage","removeItem","setItem","catch","error","__tryLogIn","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getItem","signInWithCredential","response","logOut","signOut","__logOut","mainCard","data","smallText","email","messages","Date","time","toISOString","slice","indexOf","connect","state","setState","messagesArr","Object","keys","map","item","iDiv","key","MessageCard","iField","TextField","input","label","onChange","event","preventDefault","userdata","message","currentUser","displayName","getIdToken","post","messageSend","console","log","Messages","timer","this","setInterval","downloadMessages","clearInterval","loggedIn","MessageBox","Dialogs","SignButton","actions","getState","get","payload","info","fullCard","CardContentPanel","heading","buttons","VisitButton","disableErrorMessage","errorMessage","toString","redownloadData","Projects","projects","downloadData","ErrorModal","ProgBar","messageState","mainReducer","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","Nav","path","Self","to","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.facf5d91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignButton\":\"Messages_SignButton__1TWy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"returnFab\":\"Projects_returnFab__21jP5\",\"ProgBar\":\"Projects_ProgBar__3uDz7\"};","module.exports = __webpack_public_path__ + \"static/media/picture.2f6bf912.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\n\r\nexport default props => (\r\n  <React.Fragment>\r\n    <Typography>{props.title}</Typography>\r\n    <LinearProgress\r\n      variant=\"determinate\"\r\n      value={props.percentage}\r\n      color=\"secondary\"\r\n    />\r\n  </React.Fragment>\r\n);\r\n","import React from \"react\";\r\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nexport default Component => {\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      primary: {\r\n        main: \"#1a237e\"\r\n      },\r\n      secondary: {\r\n        main: \"#2962ff\"\r\n      }\r\n    }\r\n  });\r\n  return props => (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline />\r\n      <Component {...props.children} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Self.module.css\";\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CardActions\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Favorite } from \"@material-ui/icons\";\r\nimport InfoBar from \"./InfoBar/InfoBar\";\r\nimport darkTheme from \"../../Components/HOC/darkTheme\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst useStyles = makeStyles(theme => ({\r\n  large: {\r\n    display: \"inline-flex\",\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nexport default darkTheme(\r\n  withRouter(props => {\r\n    document.title = \"Portfolio\";\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.main}>\r\n          <Avatar\r\n            className={useStyles().large}\r\n            alt=\"MZO\"\r\n            src={require(\"./picture.png\")}\r\n          />\r\n          <Typography variant=\"h4\">Muhammad Hamza</Typography>\r\n          <Typography>\r\n            OSS <Favorite style={{ fontSize: \"0.8em\" }} />\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Card className={classes.infoCard}>\r\n            <CardContent>\r\n              <Typography component=\"h5\" variant=\"h5\" color=\"textSecondary\">\r\n                Hello World\r\n              </Typography>\r\n              <Typography component=\"p\">\r\n                I am a computer scientist to be. I am an ex Android ROM\r\n                developer, love working different frameworks and learning\r\n                things.\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => props.history.push(\"/projects\")}\r\n              >\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n          <Card className={classes.infoCard}>\r\n            <CardContent>\r\n              <Typography component=\"h5\" variant=\"h5\" color=\"textSecondary\">\r\n                Skills\r\n                <InfoBar title=\"JavaScript\" percentage={90} />\r\n                <InfoBar title=\"C/C++\" percentage={82} />\r\n                <InfoBar title=\"HTML/CSS\" percentage={95} />\r\n                <InfoBar title=\"ReactJS\" percentage={90} />\r\n                <InfoBar title=\"Communication Skills\" percentage={85} />\r\n                <InfoBar title=\"Problem Solving\" percentage={95} />\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nexport default props => {\r\n  return (\r\n    <ListItem button component=\"a\" href={props.link} target=\"_blank\">\r\n      <ListItemIcon>{props.icon}</ListItemIcon>\r\n      <ListItemText primary={props.text} />\r\n    </ListItem>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Fab, SwipeableDrawer, List } from \"@material-ui/core\";\r\nimport {\r\n  Code,\r\n  LinkedIn,\r\n  Email,\r\n  ArrowUpward,\r\n  Message,\r\n  ArrowBack\r\n} from \"@material-ui/icons\";\r\nimport classes from \"./Nav.module.css\";\r\nimport NavItem from \"../../Components/NavItem/NavItem\";\r\nimport darkTheme from \"../../Components/HOC/darkTheme\";\r\nimport { withRouter } from \"react-router-dom\";\r\nexport default darkTheme(\r\n  withRouter(props => {\r\n    let [drawer, useDrawer] = React.useState(false);\r\n    let floatingButton = <Message />,\r\n      historyPush = \"/messages\";\r\n    if (props.location.pathname !== \"/\") {\r\n      floatingButton = <ArrowBack />;\r\n      historyPush = \"/\";\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Fab\r\n          className={classes.misc}\r\n          color=\"secondary\"\r\n          onClick={() => props.history.push(historyPush)}\r\n        >\r\n          {floatingButton}\r\n        </Fab>\r\n        <Fab\r\n          className={classes.nav}\r\n          onClick={() => useDrawer(true)}\r\n          color=\"primary\"\r\n        >\r\n          <ArrowUpward />\r\n        </Fab>\r\n        <SwipeableDrawer\r\n          anchor=\"bottom\"\r\n          open={drawer}\r\n          onOpen={() => useDrawer(true)}\r\n          onClose={() => useDrawer(false)}\r\n        >\r\n          <List className={classes.List}>\r\n            <NavItem\r\n              link=\"https://github.com/MZO9400\"\r\n              text=\"GitHub\"\r\n              icon={<Code />}\r\n            />\r\n            <NavItem\r\n              link=\"https://www.linkedin.com/in/muhammad-hamza-a30aa51a0/\"\r\n              text=\"LinkedIn\"\r\n              icon={<LinkedIn />}\r\n            />\r\n            <NavItem\r\n              link=\"mailto:hamza.hameed00@gmail.com\"\r\n              text=\"Email\"\r\n              icon={<Email />}\r\n            />\r\n          </List>\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n    );\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nexport default props => {\r\n  let [view, setView] = React.useState(true);\r\n  return (\r\n    <Dialog\r\n      open={view}\r\n      onClose={() => setView(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.text}\r\n        </DialogContentText>\r\n        <LinearProgress />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setView(false)}\r\n        >\r\n          Hide\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={props.logIn}\r\n          color=\"primary\"\r\n          autoFocus\r\n        >\r\n          Log in\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import Axios from \"axios\";\r\n\r\nlet instance = Axios.create({\r\n  baseURL: \"https://ghportfoliomessages.firebaseio.com/\"\r\n});\r\nexport default instance;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Axios from \"../FirebaseAxiosInstance\";\r\n\r\nconst __setup = () => {\r\n  if (!firebase.apps.length)\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA1kkh7byohcnoXa48VFbj1YjY4vIMBMoc\",\r\n      authDomain: \"ghportfoliomessages.firebaseapp.com\",\r\n      databaseURL: \"https://ghportfoliomessages.firebaseio.com\",\r\n      projectId: \"ghportfoliomessages\",\r\n      storageBucket: \"ghportfoliomessages.appspot.com\",\r\n      messagingSenderId: \"818080958950\",\r\n      appId: \"1:818080958950:web:dd2e7bb26da1e50b79ae27\",\r\n      measurementId: \"G-ECCVN1KBJF\"\r\n    });\r\n};\r\nconst __newLogIn = dispatch => {\r\n  var provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase\r\n    .auth()\r\n    .signInWithPopup(provider)\r\n    .then(result => {\r\n      var token = result.credential.accessToken;\r\n      localStorage.removeItem(\"googleFireBaseAuthUser\");\r\n      localStorage.setItem(\"googleFireBaseAuthUser\", token);\r\n      return dispatch({ type: actionTypes.LOGGED_IN });\r\n    })\r\n    .catch(error => {});\r\n};\r\nconst __tryLogIn = dispatch => {\r\n  __setup();\r\n  const token = localStorage.getItem(\"googleFireBaseAuthUser\");\r\n  if (token !== null) {\r\n    var credential = firebase.auth.GoogleAuthProvider.credential(null, token);\r\n    firebase\r\n      .auth()\r\n      .signInWithCredential(credential)\r\n      .then(response => {\r\n        dispatch({ type: actionTypes.LOGGED_IN });\r\n      })\r\n      .catch(error => __newLogIn(dispatch));\r\n  } else __newLogIn(dispatch);\r\n};\r\nconst __logOut = dispatch => {\r\n  localStorage.removeItem(\"googleFireBaseAuthUser\");\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(response => dispatch({ type: actionTypes.LOGGED_OUT }))\r\n    .catch(error => {});\r\n};\r\n\r\nexport const logOut = () => {\r\n  return dispatch => {\r\n    __logOut(dispatch);\r\n  };\r\n};\r\n\r\nexport const logIn = () => {\r\n  return dispatch => {\r\n    __tryLogIn(dispatch);\r\n  };\r\n};\r\nexport const downloadMessages = () => {\r\n  return (dispatch, getState) => {\r\n    if (getState().loggedIn)\r\n      firebase\r\n        .auth()\r\n        .currentUser.getIdToken(true)\r\n        .then(token => {\r\n          Axios.get(`/ghportfoliomessages.json?auth=${token}`)\r\n            .then(response => {\r\n              dispatch({\r\n                type: actionTypes.DOWNLOAD_MESSAGES,\r\n                payload: response.data\r\n              });\r\n            })\r\n            .catch(error => console.log(error));\r\n        });\r\n  };\r\n};\r\n","export const LOGGED_IN = \"LOGGED_IN\";\r\nexport const LOGGED_OUT = \"LOGGED_OUT\";\r\nexport const DOWNLOAD_MESSAGES = \"DOWNLOAD_MESSAGES\";\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport classes from \"./MessageCard.module.css\";\r\nexport default props => (\r\n  <Card className={classes.mainCard}>\r\n    <CardContent>\r\n      <Typography variant=\"h5\" color=\"textSecondary\">\r\n        {props.data.id}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h6\"\r\n        className={classes.smallText}\r\n        color=\"textSecondary\"\r\n      >\r\n        {props.data.email}\r\n      </Typography>\r\n      <Typography>{props.data.messages}</Typography>\r\n      <Typography className={classes.smallText} color=\"textSecondary\">\r\n        {new Date(props.data.time)\r\n          .toISOString()\r\n          .slice(0, new Date().toISOString().indexOf(\"T\"))}\r\n      </Typography>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MessageCard from \"../MessageCard/MessageCard\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Axios from \"../../../FirebaseAxiosInstance\";\r\nimport classes from \"./MessageBox.module.css\";\r\nconst mapStateToProps = state => {\r\n  return { messages: state.messages };\r\n};\r\nexport default connect(mapStateToProps)(props => {\r\n  let [state, setState] = React.useState(\"\");\r\n  let messagesArr = [];\r\n  if (props.messages) {\r\n    let keys = Object.keys(props.messages);\r\n    keys.map(item => messagesArr.push(props.messages[item]));\r\n  }\r\n  const textChange = event => setState(event.target.value);\r\n  const submitMessage = event => {\r\n    event.preventDefault();\r\n    if (state !== \"\") {\r\n      let userdata = null;\r\n      userdata = firebase.auth().currentUser;\r\n      const message = {\r\n        id: userdata.displayName,\r\n        messages: state,\r\n        time: new Date(),\r\n        email: userdata.email\r\n      };\r\n      setState(\"\");\r\n      firebase\r\n        .auth()\r\n        .currentUser.getIdToken(true)\r\n        .then(token => {\r\n          Axios.post(`/ghportfoliomessages.json?auth=${token}`, message)\r\n            .then(response => props.messageSend())\r\n            .catch(error => console.log(error));\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.iDiv}>\r\n      {messagesArr.map((item, key) => (\r\n        <MessageCard data={item} key={key} />\r\n      ))}\r\n      <div className={classes.iField}>\r\n        <TextField\r\n          className={classes.input}\r\n          id=\"standard-secondary\"\r\n          label=\"Leave a message\"\r\n          color=\"secondary\"\r\n          value={state}\r\n          onChange={textChange}\r\n        />\r\n        <Button onClick={submitMessage} color=\"secondary\">\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport darkTheme from \"../HOC/darkTheme\";\r\nimport Dialogs from \"../../Containers/Dialogs/Dialogs\";\r\nimport * as actions from \"../../Redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport MessageBox from \"./MessageBox/MessageBox\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport classes from \"./Messages.module.css\";\r\nclass Messages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    document.title = \"Messages\";\r\n  }\r\n  timer = null;\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.props.downloadMessages(), 10000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.downloadMessages();\r\n  }\r\n  render() {\r\n    const data = (\r\n      <React.Fragment>\r\n        {this.props.loggedIn ? (\r\n          <MessageBox messageSend={this.props.downloadMessages} />\r\n        ) : (\r\n          <Dialogs\r\n            title=\"Log in\"\r\n            text=\"Please log in to continue\"\r\n            logIn={this.props.logIn}\r\n          />\r\n        )}\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.SignButton}\r\n          variant=\"extended\"\r\n          onClick={() =>\r\n            this.props.loggedIn ? this.props.logOut() : this.props.logIn()\r\n          }\r\n        >\r\n          {this.props.loggedIn ? \"Sign Out\" : \"Sign in\"}\r\n        </Fab>\r\n      </React.Fragment>\r\n    );\r\n    return data;\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.loggedIn\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: () => dispatch(actions.logIn()),\r\n    logOut: () => dispatch(actions.logOut()),\r\n    downloadMessages: () => dispatch(actions.downloadMessages())\r\n  };\r\n};\r\nexport default darkTheme(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withRouter(Messages))\r\n);\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default props => (\r\n  <Button component=\"a\" target=\"_blank\" href={props.link}>\r\n    {props.info}\r\n  </Button>\r\n);\r\n","import React from \"react\";\r\nimport { Card, CardContent, CardActions, Typography } from \"@material-ui/core\";\r\nimport VisitButton from \"../VisitButton/VisitButton\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nexport default props => (\r\n  <Card className={classes.fullCard}>\r\n    <CardContent className={classes.CardContentPanel}>\r\n      <Typography variant=\"h4\" color=\"textSecondary\">\r\n        {props.heading}\r\n      </Typography>\r\n      {props.data.map((item, key) => (\r\n        <Typography key={key}>{item}</Typography>\r\n      ))}\r\n    </CardContent>\r\n    <CardActions>\r\n      {props.buttons.map((item, key) => (\r\n        <VisitButton info={item.info} link={item.link} key={key} />\r\n      ))}\r\n    </CardActions>\r\n  </Card>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button\r\n} from \"@material-ui/core\";\r\nexport default props => (\r\n  <Dialog open onClose={() => props.disableErrorMessage}>\r\n    <DialogTitle>Error Occured</DialogTitle>\r\n    <DialogContent>{props.errorMessage.toString()}</DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={() => props.redownloadData()}>Retry</Button>\r\n      <Button onClick={props.disableErrorMessage}>Do nothing</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n);\r\n","import React from \"react\";\r\nimport darkTheme from \"../../Components/HOC/darkTheme\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classes from \"./Projects.module.css\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport Axios from \"../../FirebaseAxiosInstance\";\r\nimport ErrorModal from \"../../Components/ErrorModal/ErrorModal\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nclass Projects extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    document.title = \"Projects\";\r\n  }\r\n  state = { projects: null, errorMessage: null };\r\n  downloadData = () => {\r\n    if (this.state.errorMessage !== null) {\r\n      this.setState({ errorMessage: null });\r\n    }\r\n    Axios.get(\"/projects.json\")\r\n      .then(response => {\r\n        this.setState({ projects: response.data[Object.keys(response.data)] });\r\n      })\r\n      .catch(error => this.setState(state => (state.errorMessage = error)));\r\n  };\r\n  componentDidMount() {\r\n    this.downloadData();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.errorMessage ? (\r\n          <ErrorModal\r\n            redownloadData={this.downloadData}\r\n            errorMessage={this.state.errorMessage}\r\n            disableErrorMessage={() => this.setState({ errorMessage: null })}\r\n          />\r\n        ) : null}\r\n        {this.state.projects ? (\r\n          this.state.projects.map((item, key) => (\r\n            <Card\r\n              heading={item.heading}\r\n              data={item.data}\r\n              buttons={item.buttons}\r\n              key={key}\r\n            />\r\n          ))\r\n        ) : (\r\n          <LinearProgress className={classes.ProgBar} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default darkTheme(withRouter(Projects));\r\n","import * as actionTypes from \"./actionTypes\";\r\nconst messageState = {\r\n  loggedIn: false,\r\n  messages: null\r\n};\r\nconst mainReducer = (state = messageState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGGED_IN:\r\n      return { ...state, loggedIn: true };\r\n    case actionTypes.LOGGED_OUT:\r\n      return { ...state, loggedIn: false };\r\n    case actionTypes.DOWNLOAD_MESSAGES:\r\n      return { ...state, messages: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default mainReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/Store\";\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Self from \"./Components/Self/Self\";\r\nimport Nav from \"./Containers/Nav/Nav\";\r\nimport Messages from \"./Components/Messages/Messages\";\r\nimport Projects from \"./Containers/Projects/Projects\";\r\n\r\nexport default props => {\r\n  return (\r\n    <React.Fragment>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path=\"/projects\" render={Projects} />\r\n        <Route path=\"/messages\" component={Messages} />\r\n        <Route path=\"/\" component={Self} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Self_main__3wHrI\",\"infoCard\":\"Self_infoCard__1tL0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3qSJc\",\"List\":\"Nav_List__1xFi2\",\"misc\":\"Nav_misc__3TFLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCard\":\"MessageCard_mainCard__36QNg\",\"smallText\":\"MessageCard_smallText__1nye6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iField\":\"MessageBox_iField__3Ig2e\",\"input\":\"MessageBox_input__3-Ru9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullCard\":\"Card_fullCard__-BqZd\",\"CardContentPanel\":\"Card_CardContentPanel__1xpCF\"};"],"sourceRoot":""}